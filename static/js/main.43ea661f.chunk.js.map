{"version":3,"sources":["assets/logo.png","containers/Layout/Header.js","containers/Layout/Footer.js","containers/Layout/Layout.js","assets/maruti.png","assets/bluedart.jpg","containers/Dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","img","height","paddingTop","header","backgroundColor","boxShadow","zIndex","drawer","root","display","Header","props","classes","totalBalance","className","AppBar","position","Toolbar","Grid","item","xs","src","Logo","alt","Typography","variant","color","align","Footer","Component","withRouter","Layout","fetchTotalBalance","a","_","cloneDeep","state","TPC_Data","TPCDetails","details","Maruti_Data","MarutiDetails","BlueDart_Data","BlueDartDetails","filteredTPCList","filter","isAmomuntDispatchPassed","filteredMarutiList","filteredBlueDartList","each","data","amount","setState","this","Fragment","history","maincontainerwrapper","children","withStyles","marginTop","marginBottom","Dashboard","fetchAllAmounts","TPCTotalAmount","MarutiTotalAmount","BlueDartTotalAmount","TPCBalanceAmount","MarutiBalanceAmount","BlueDartBalanceAmount","showLoader","showBookingDetails","selectedCourier","handleBack","getCourierName","courierName","fetchAllBookingDetailsTemplate","length","Card","CardActionArea","CardContent","container","spacing","map","row","index","md","key","style","padding","bookingDate","trackingNumber","destination","greenIcon","redIcon","amountDispatchDate","Box","textAlignCenter","CircularProgress","size","Paper","paper","onClick","fontSize","sm","CardActions","Button","MarutiLogo","BlueDartLogo","width","marginLeft","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43ea661f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0e1a2ed3.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport {\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport Logo from '../../assets/logo.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    img: {\r\n        height: '3.25rem',\r\n        paddingTop: '5px',\r\n    },\r\n    header: {\r\n        backgroundColor: '#fff',\r\n        boxShadow: '0 1px 15px 1px rgba(69, 65, 78, 0.1)',\r\n        zIndex: theme.zIndex.drawer + 1\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n    }\r\n}));\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    const { totalBalance } = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\" className={classes.header}>\r\n                <Toolbar className='header'>\r\n                    <Grid className='header-wrapper' item xs={6}>\r\n                        <img src={Logo} alt='' className={classes.img} />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <Typography variant='subtitle1' color='primary' className=\"amount-text\" align='right'>\r\n                            Balance: ₹ {totalBalance}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <span>©2021 Assiduous</span>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Footer);","import React, { Component } from 'react'\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from 'react-router';\r\nimport _ from 'lodash';\r\nimport TPCDetails from '../../JSONFiles/tpc.json';\r\nimport MarutiDetails from '../../JSONFiles/maruti.json';\r\nimport BlueDartDetails from '../../JSONFiles/blueDart.json';\r\n\r\nconst style = {\r\n    'maincontainerwrapper': {\r\n        marginTop: '64px',\r\n        marginBottom: '64px'\r\n    }\r\n};\r\n\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            totalBalance: 0\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchTotalBalance();\r\n    }\r\n\r\n    fetchTotalBalance = async () => {\r\n        let { totalBalance } = _.cloneDeep(this.state);\r\n        const TPC_Data = TPCDetails.details;\r\n        const Maruti_Data = MarutiDetails.details;\r\n        const BlueDart_Data = BlueDartDetails.details;\r\n\r\n        const filteredTPCList = _.filter(TPC_Data, { isAmomuntDispatchPassed: false });\r\n        const filteredMarutiList = _.filter(Maruti_Data, { isAmomuntDispatchPassed: false });\r\n        const filteredBlueDartList = _.filter(BlueDart_Data, { isAmomuntDispatchPassed: false });\r\n\r\n        _.each(filteredTPCList, function(data) { totalBalance += data.amount; });\r\n        _.each(filteredMarutiList, function(data) { totalBalance += data.amount; });\r\n        _.each(filteredBlueDartList, function(data) { totalBalance += data.amount; });\r\n\r\n        await this.setState({ totalBalance });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { totalBalance } = _.cloneDeep(this.state);\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Header\r\n                    {...this.props}\r\n                    history={this.props.history}\r\n                    totalBalance={totalBalance}\r\n                />\r\n                <div className={classes.maincontainerwrapper}>\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </div>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(style)(Layout));","export default __webpack_public_path__ + \"static/media/maruti.27753ad2.png\";","export default __webpack_public_path__ + \"static/media/bluedart.4b2de15f.jpg\";","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from 'react-router';\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Box,\r\n    CircularProgress,\r\n    TextField,\r\n    Container,\r\n    Typography,\r\n    Link,\r\n    Paper\r\n} from '@material-ui/core';\r\nimport _ from 'lodash';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Logo from '../../assets/logo.png';\r\nimport MarutiLogo from '../../assets/maruti.png';\r\nimport BlueDartLogo from '../../assets/bluedart.jpg';\r\n\r\nimport ArrowBackIosOutlinedIcon from '@material-ui/icons/ArrowBackIosOutlined';\r\n\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport TrackChangesIcon from '@material-ui/icons/TrackChanges';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nimport TPCDetails from '../../JSONFiles/tpc.json';\r\nimport MarutiDetails from '../../JSONFiles/maruti.json';\r\nimport BlueDartDetails from '../../JSONFiles/blueDart.json';\r\n\r\nconst style = {\r\n    img: {\r\n        width: \"100%\",\r\n        height: \"100px\"\r\n    },\r\n    greenIcon: {\r\n        color: 'green',\r\n        marginLeft: \"5px\"\r\n    },\r\n    redIcon: {\r\n        color: 'red',\r\n        marginLeft: \"5px\"\r\n    },\r\n    paper: {\r\n        padding: \"15px\"\r\n    }\r\n};\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showLoader: true,\r\n            TPCTotalAmount: 0,\r\n            MarutiTotalAmount: 0,\r\n            BlueDartTotalAmount: 0,\r\n            TPCBalanceAmount: 0,\r\n            MarutiBalanceAmount: 0,\r\n            BlueDartBalanceAmount: 0\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchAllAmounts();\r\n    }\r\n\r\n    fetchAllAmounts = async () => {\r\n        let {\r\n            TPCTotalAmount,\r\n            MarutiTotalAmount,\r\n            BlueDartTotalAmount,\r\n            TPCBalanceAmount,\r\n            MarutiBalanceAmount,\r\n            BlueDartBalanceAmount\r\n        } = _.cloneDeep(this.state);\r\n\r\n        const TPC_Data = TPCDetails.details;\r\n        const Maruti_Data = MarutiDetails.details;\r\n        const BlueDart_Data = BlueDartDetails.details;\r\n\r\n        const filteredTPCList = _.filter(TPC_Data, { isAmomuntDispatchPassed: false });\r\n        const filteredMarutiList = _.filter(Maruti_Data, { isAmomuntDispatchPassed: false });\r\n        const filteredBlueDartList = _.filter(BlueDart_Data, { isAmomuntDispatchPassed: false });\r\n\r\n        _.each(TPC_Data, function(data) { TPCTotalAmount += data.amount; });\r\n        _.each(Maruti_Data, function(data) { MarutiTotalAmount += data.amount; });\r\n        _.each(BlueDart_Data, function(data) { BlueDartTotalAmount += data.amount; });\r\n\r\n        _.each(filteredTPCList, function(data) { TPCBalanceAmount += data.amount; });\r\n        _.each(filteredMarutiList, function(data) { MarutiBalanceAmount += data.amount; });\r\n        _.each(filteredBlueDartList, function(data) { BlueDartBalanceAmount += data.amount; });\r\n\r\n        await this.setState({\r\n            TPCTotalAmount,\r\n            MarutiTotalAmount,\r\n            BlueDartTotalAmount,\r\n            TPCBalanceAmount,\r\n            MarutiBalanceAmount,\r\n            BlueDartBalanceAmount,\r\n            showLoader: false,\r\n\r\n            showBookingDetails: false,\r\n            selectedCourier: null\r\n        })\r\n    }\r\n\r\n    showBookingDetails = async (selectedCourier) => {\r\n        await this.setState({ \r\n            showBookingDetails: true,\r\n            selectedCourier: selectedCourier\r\n        });\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.setState({ showBookingDetails: false, selectedCourier: null });\r\n    }\r\n\r\n    getCourierName = (selectedCourier) => {\r\n        let courierName = '';\r\n\r\n        switch(selectedCourier) {\r\n            case 1:\r\n                courierName = 'PROFESSIONAL COURIERS';\r\n                break;\r\n            case 2:\r\n                courierName = 'MARUTI COURIERS';\r\n                break;\r\n            case 3:\r\n                courierName = 'BLUE DART COURIERS';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return courierName;\r\n    }\r\n\r\n    fetchAllBookingDetailsTemplate = (selectedCourier, classes) => {\r\n        let details = [];\r\n\r\n        switch(selectedCourier) {\r\n            case 1:\r\n                details = TPCDetails.details;\r\n                break;\r\n            case 2:\r\n                details = MarutiDetails.details;\r\n                break;\r\n            case 3:\r\n                details = BlueDartDetails.details;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (details.length === 0) {\r\n            return (\r\n                <Grid item xs={12}>\r\n                    <Card className='courier-details-wrapper'>\r\n                        <CardActionArea className='card-content'>\r\n                            <CardContent>\r\n                                <Typography variant='h5' align='center' color='primary'>\r\n                                    NO DATA FOUND FOR SELECTED COURIER SERVICE\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Grid container spacing={2}>\r\n                {\r\n                    details.map((row, index) => (\r\n                        <Grid item xs={12} md={4} key={`courier-details-${index}`}>\r\n                            <Card className='courier-details-wrapper'>\r\n                                <CardActionArea className='card-content'>\r\n                                    <CardContent style={{ padding: \"10px\" }}>\r\n                                        <Typography variant='subtitle1' className='row-details'>\r\n                                            <EventAvailableIcon /> <span className='details-value'>{row.bookingDate}</span>\r\n                                        </Typography>\r\n\r\n                                        <Typography variant='subtitle1' className='row-details'>\r\n                                            <TrackChangesIcon /> <span className='details-value'>{row.trackingNumber}</span>\r\n                                        </Typography>\r\n\r\n                                        <Typography variant='subtitle1' className='row-details'>\r\n                                            <PublicIcon /> <span className='details-value'>{row.destination}</span>\r\n                                        </Typography>\r\n\r\n                                        <Typography variant='subtitle1' className='row-details'>\r\n                                            <MoneyIcon /> <span className='details-value'>{row.amount}</span>\r\n                                        </Typography>\r\n                                        \r\n                                        <Typography variant='subtitle1' className='row-details'>\r\n                                            <AccountBalanceWalletIcon />\r\n                                            {\r\n                                                (row.isAmomuntDispatchPassed) ? (\r\n                                                    <DoneIcon className={classes.greenIcon} />\r\n                                                ) : (\r\n                                                    <ClearIcon className={classes.redIcon} />\r\n                                                )\r\n                                            }\r\n                                            <span className='details-value'>\r\n                                                {\r\n                                                    row.isAmomuntDispatchPassed ? (\r\n                                                        <React.Fragment>\r\n                                                            ({row.amountDispatchDate})\r\n                                                        </React.Fragment>\r\n                                                    ) : \"\"\r\n                                                }\r\n                                            </span>\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))\r\n                }                \r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { \r\n            showLoader,\r\n            TPCTotalAmount,\r\n            MarutiTotalAmount,\r\n            BlueDartTotalAmount,\r\n            TPCBalanceAmount,\r\n            MarutiBalanceAmount,\r\n            BlueDartBalanceAmount,\r\n            showBookingDetails,\r\n            selectedCourier\r\n        } = this.state;\r\n\r\n        if (showLoader) {\r\n            return (\r\n                <Grid container>\r\n                    <div className='CustLodder circular-loader'>\r\n                        <Box className='CustLodder' padding={1}>\r\n                            <Box className={classes.textAlignCenter}>\r\n                                <CircularProgress size={40} />\r\n                            </Box>\r\n                        </Box>\r\n                    </div>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        if (showBookingDetails) {\r\n            return (\r\n                <Grid container className=\"\" spacing={2}>\r\n                    <Grid item xs={12} className='page-back-row'>\r\n                        <Paper className={classes.paper}>\r\n                            <div onClick={() => this.handleBack()} className='page-back--link'>\r\n                                <ArrowBackIosOutlinedIcon fontSize='small' color='primary' />\r\n                                <Typography color='primary' variant='body1' color='primary'>\r\n                                    {this.getCourierName(selectedCourier)} DETAILS\r\n                                </Typography>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        { this.fetchAllBookingDetailsTemplate(selectedCourier, classes) }\r\n                    </Grid>\r\n                </Grid>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Grid container className=\"\" spacing={2}>\r\n                <Grid item xs={12} md={4} sm={6}>\r\n                    <Card className='courier-list-wrapper'>\r\n                        <CardActionArea className='card-content'>\r\n                            <CardContent>\r\n                                <img src={Logo} alt='' className={classes.img} />\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions className='card-action'>\r\n                            <div>\r\n                                <Typography variant='subtitle1' color='primary' className=\"amount-text\">\r\n                                    Total: ₹ {TPCTotalAmount}\r\n                                </Typography>\r\n\r\n                                <Typography variant='subtitle1' color='primary' className=\"amount-text\">\r\n                                    Balance: ₹ {TPCBalanceAmount}\r\n                                </Typography>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Button\r\n                                    variant='outlined'\r\n                                    onClick={() => this.showBookingDetails(1)}\r\n                                    color='primary'\r\n                                >\r\n                                    Details\r\n                                </Button>\r\n                            </div>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={4} sm={6}>\r\n                    <Card className='courier-list-wrapper'>\r\n                        <CardActionArea className='card-content'>\r\n                            <CardContent>\r\n                                <img src={MarutiLogo} alt='' className={classes.img} />\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions className='card-action'>                            \r\n                            <div>\r\n                                <Typography variant='subtitle1' color='primary' className=\"amount-text\">\r\n                                    Total: ₹ {MarutiTotalAmount}\r\n                                </Typography>\r\n\r\n                                <Typography variant='subtitle1' color='primary' className=\"amount-text\">\r\n                                    Balance: ₹ {MarutiBalanceAmount}\r\n                                </Typography>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Button\r\n                                    variant='outlined'\r\n                                    onClick={() => this.showBookingDetails(2)}\r\n                                    color='primary'\r\n                                >\r\n                                    Details\r\n                                </Button>\r\n                            </div>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={4} sm={6}>\r\n                    <Card className='courier-list-wrapper'>\r\n                        <CardActionArea className='card-content'>\r\n                            <CardContent>\r\n                                <img src={BlueDartLogo} alt='' className={classes.img} />\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions className='card-action'>                            \r\n                            <div>\r\n                                <Typography variant='subtitle1' color='primary' className=\"amount-text\">\r\n                                    Total: ₹ {BlueDartTotalAmount}\r\n                                </Typography>\r\n\r\n                                <Typography variant='subtitle1' color='primary' className=\"amount-text\">\r\n                                    Balance: ₹ {BlueDartBalanceAmount}\r\n                                </Typography>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Button\r\n                                    variant='outlined'\r\n                                    onClick={() => this.showBookingDetails(3)}\r\n                                    color='primary'\r\n                                >\r\n                                    Details\r\n                                </Button>\r\n                            </div>\r\n                        </CardActions>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(withStyles(style)(Dashboard));","import React from 'react';\r\nimport Layout from './containers/Layout/Layout';\r\nimport Dashboard from './containers/Dashboard/Dashboard';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Layout>\r\n              <Dashboard />\r\n            </Layout>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/less/main.less';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}